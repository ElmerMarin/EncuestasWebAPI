// <auto-generated />
using System;
using ApiRestfullSurvey.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiRestfullSurvey.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Coordinador", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("IdCoordinador")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Dni");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Coordinadores");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.DetalleEncuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("EncuestaId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fechafinal")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EncuestaId");

                    b.ToTable("DetalleEncuestas");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.DetalleResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EncuestaId")
                        .HasColumnType("int");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdResultado")
                        .HasColumnType("int");

                    b.Property<int?>("ResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.HasIndex("ResultadoId");

                    b.ToTable("DetalleResultados");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Encuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Encuestado", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("IdEncuestado")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Dni");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Encuestados");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EncuestaId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int?>("PreguntaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora_Final")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hora_Inicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Categoria", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Area", "Area")
                        .WithMany("Categoria")
                        .HasForeignKey("AreaId");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Coordinador", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Usuario", "Usuario")
                        .WithMany("Coordinador")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.DetalleEncuesta", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Area", "Area")
                        .WithMany("DetalleEncuesta")
                        .HasForeignKey("AreaId");

                    b.HasOne("ApiRestfullSurvey.Entities.Categoria", "Categoria")
                        .WithMany("DetalleEncuesta")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("ApiRestfullSurvey.Entities.Encuesta", "Encuesta")
                        .WithMany("DetalleEncuesta")
                        .HasForeignKey("EncuestaId");

                    b.Navigation("Area");

                    b.Navigation("Categoria");

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.DetalleResultado", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Encuesta", "Encuesta")
                        .WithMany("DetalleResultado")
                        .HasForeignKey("EncuestaId");

                    b.HasOne("ApiRestfullSurvey.Entities.Resultado", "Resultado")
                        .WithMany("DetalleResultado")
                        .HasForeignKey("ResultadoId");

                    b.Navigation("Encuesta");

                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Encuestado", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Usuario", "Usuario")
                        .WithMany("Encuestado")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Pregunta", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Encuesta", "Encuesta")
                        .WithMany("Preguntas")
                        .HasForeignKey("EncuestaId");

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Respuesta", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Pregunta", "Pregunta")
                        .WithMany("Respuesta")
                        .HasForeignKey("PreguntaId");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Resultado", b =>
                {
                    b.HasOne("ApiRestfullSurvey.Entities.Usuario", "Usuario")
                        .WithMany("Resultado")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Area", b =>
                {
                    b.Navigation("Categoria");

                    b.Navigation("DetalleEncuesta");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Categoria", b =>
                {
                    b.Navigation("DetalleEncuesta");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Encuesta", b =>
                {
                    b.Navigation("DetalleEncuesta");

                    b.Navigation("DetalleResultado");

                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Pregunta", b =>
                {
                    b.Navigation("Respuesta");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Resultado", b =>
                {
                    b.Navigation("DetalleResultado");
                });

            modelBuilder.Entity("ApiRestfullSurvey.Entities.Usuario", b =>
                {
                    b.Navigation("Coordinador");

                    b.Navigation("Encuestado");

                    b.Navigation("Resultado");
                });
#pragma warning restore 612, 618
        }
    }
}
